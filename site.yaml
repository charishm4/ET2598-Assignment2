
---
- hosts: webservers
  gather_facts: yes

  tasks:

  - name: remove apt lock file
    file:
      state: absent
      path: "/var/lib/dpkg/*"
    become: yes
  
  - name: update cache
    become: true
    apt:
    
       update_cache: yes

  - name: install pip
    become: true
    apt: 
     name: python3-pip
     state: present
     update_cache: true
    
  - name: install flask
    pip: name=flask

  - name: fetch application
   # git: repo=https://github.com/patrikarlos/NSO_A2.git/ dest=/opt/flask-demo
    copy: src=application2.py dest=./application2.py

- hosts: HAproxy
  gather_facts: yes
  become: true
  become_method: sudo



# # HAPROXY CONFIGURATION
  tasks:

  - name: update cache
    become: true
    apt:
    

  - name: update apt cache
    become: yes
    apt:
      update_cache: yes

  - name: haproxy installation
    become: true
    apt:
      name: haproxy
      state: latest   

  - name: upgrade the packages
    become: true
    apt:
      update_cache: yes
    notify:
        - run Haproxy   

  - name: Gather facts from servers
    setup:
      filter: ansible_default_ipv4.address   


  - name: removing haproxy.cfg
    file:
       path: "/etc/haproxy/haproxy.cfg"
       state: absent
    notify:
     - restart haproxy


  - name: Deploying haproxy.cfg 
    template:
      src: haproxy.cfg.j2
      dest: "/etc/haproxy/haproxy.cfg"
    notify:
      - restart haproxy
      - run Haproxy

  handlers:

  - name: run Haproxy
    service:
        name: haproxy
        state: started

  - name: restart haproxy
    service:
      name: haproxy
      state: restarted
  

# FLASK DEPLOYMENT

- hosts: webservers
  become: true

  tasks:
  

# start flask

  - name: start flask
    shell: |
         export FLASK_APP=./application2.py
         export FLASK_RUN_HOST=0.0.0.0
         export FLASK_RUN_PORT=8080
         flask run&

